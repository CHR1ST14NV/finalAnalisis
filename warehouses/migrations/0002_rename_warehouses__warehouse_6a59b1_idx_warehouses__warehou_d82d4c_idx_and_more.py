# Generated by Django 5.2.7 on 2025-10-23 02:23

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models, connections


def _index_exists(cursor, table: str, index: str) -> bool:
    cursor.execute(
        """
        SELECT COUNT(1)
        FROM information_schema.statistics
        WHERE TABLE_SCHEMA = DATABASE()
          AND TABLE_NAME = %s
          AND INDEX_NAME = %s
        """,
        [table, index],
    )
    return cursor.fetchone()[0] > 0


def safe_rename_or_create_index(apps, schema_editor):
    conn = connections[schema_editor.connection.alias]
    table = 'warehouses_inventorybatch'
    old1 = 'warehouses__warehouse_6a59b1_idx'
    legacy = 'ix_batch_fefo'
    new = 'warehouses__warehou_d82d4c_idx'
    with conn.cursor() as cursor:
        if _index_exists(cursor, table, new):
            return
        if _index_exists(cursor, table, old1):
            cursor.execute(f"ALTER TABLE `{table}` RENAME INDEX `{old1}` TO `{new}`")
        elif _index_exists(cursor, table, legacy):
            cursor.execute(f"ALTER TABLE `{table}` RENAME INDEX `{legacy}` TO `{new}`")
        else:
            cursor.execute(f"ALTER TABLE `{table}` ADD INDEX `{new}` (`warehouse_id`, `sku_id`, `expires_at`)")


class Migration(migrations.Migration):

    dependencies = [
        ('catalog', '0002_alter_brand_created_by_alter_brand_updated_by_and_more'),
        ('warehouses', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.RunPython(safe_rename_or_create_index, reverse_code=migrations.RunPython.noop),
        migrations.AlterUniqueTogether(
            name='inventorybatch',
            unique_together={('warehouse', 'sku', 'lot')},
        ),
        migrations.AlterUniqueTogether(
            name='replenishmentrule',
            unique_together={('sku', 'warehouse')},
        ),
        migrations.AlterField(
            model_name='inventorybatch',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)ss', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='inventorybatch',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)ss', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='replenishmentrule',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)ss', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='replenishmentrule',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)ss', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='warehouse',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)ss', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='warehouse',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)ss', to=settings.AUTH_USER_MODEL),
        ),
    ]
