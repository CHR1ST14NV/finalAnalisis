services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    command: ["--character-set-server=utf8mb4","--collation-server=utf8mb4_0900_ai_ci","--default-authentication-plugin=mysql_native_password"]
    environment:
      MYSQL_ROOT_PASSWORD: admin
      MYSQL_DATABASE: final_analisis
    ports:
      - "3309:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/initdb:/docker-entrypoint-initdb.d:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD","mysqladmin","ping","-h","127.0.0.1","-uroot","-padmin"]
      interval: 10s
      timeout: 5s
      retries: 10

  web:
    build: .
    container_name: web
    env_file:
      - .env
    environment:
      # Grupo #6: forzamos settings correctos y migraciones iniciales
      - DJANGO_SETTINGS_MODULE=core.settings
      - MIGRATE_ON_START=1
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASSWORD=admin
    command: ["/bin/bash","-c","chmod +x docker/entrypoint.sh && docker/entrypoint.sh"]
    ports:
      - "8001:8000"
    volumes:
      - .:/app
    depends_on:
      mysql:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL","curl -fsS http://localhost:8000/healthz || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 30

  adminer:
    image: adminer:latest
    container_name: adminer
    restart: always
    ports:
      - "8080:8080"
  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    environment:
      - NODE_ENV=production
    expose:
      - "3000"
    depends_on:
      - web
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL","wget -qO- http://localhost:3000/ >/dev/null 2>&1 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 30

  nginx:
    image: nginx:1.27-alpine
    depends_on:
      web:
        condition: service_healthy
      frontend:
        condition: service_healthy
    ports:
      - "3000:3000"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/conf.d/app.conf:ro
    restart: unless-stopped

volumes:
  mysql_data:
