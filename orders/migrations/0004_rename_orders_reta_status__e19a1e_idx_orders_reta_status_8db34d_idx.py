# Generated by Django 5.2.7 on 2025-10-23 02:54

from django.db import migrations, connections


def _index_exists(cursor, table: str, index: str) -> bool:
    cursor.execute(
        """
        SELECT COUNT(1)
        FROM information_schema.statistics
        WHERE TABLE_SCHEMA = DATABASE()
          AND TABLE_NAME = %s
          AND INDEX_NAME = %s
        """,
        [table, index],
    )
    return cursor.fetchone()[0] > 0


def safe_rename_or_create_index(apps, schema_editor):
    conn = connections[schema_editor.connection.alias]
    table = 'orders_retailerorder'
    old1 = 'orders_reta_status__e19a1e_idx'
    old2 = 'ix_order_status_created'
    new = 'orders_reta_status_8db34d_idx'
    with conn.cursor() as cursor:
        if _index_exists(cursor, table, new):
            return
        if _index_exists(cursor, table, old1):
            cursor.execute(f"ALTER TABLE `{table}` RENAME INDEX `{old1}` TO `{new}`")
        elif _index_exists(cursor, table, old2):
            cursor.execute(f"ALTER TABLE `{table}` RENAME INDEX `{old2}` TO `{new}`")
        else:
            cursor.execute(f"ALTER TABLE `{table}` ADD INDEX `{new}` (`status`, `created_at`)")


class Migration(migrations.Migration):

    dependencies = [
        ('orders', '0003_rename_orders_reta_status__e19a1e_idx_orders_reta_status_8db34d_idx'),
    ]

    operations = [
        migrations.RunPython(safe_rename_or_create_index, reverse_code=migrations.RunPython.noop),
    ]
